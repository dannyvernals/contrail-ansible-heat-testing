#jinja2:variable_start_string:'@@', variable_end_string:'@@', block_start_string:'<%', block_end_string:'%>'
#
heat_template_version: queens

parameters:
  fq_string:
    type: string
    default: "admin_domain:admin"
  vm_index:
    type: string
    default: "1"
  vn_name: 
    type: string
    default: "natp-kernel-net"
 
  management_vn_name: 
    type: string
    default: "natp-management-net"

  sec_group:
    type: string      
    default: "natp-test-sec-group"

  instance_ip:
    type: string 
    default: "10.10.0.3"

  instance_name:
    type: string 
    default: "natp-kernel-vn-vm"

  image_name:
    type: string 
    default: "natp-ubuntu"

  flavor_name:
    type: string
    default: natp.xp.m1.small 
 
  az: 
    type: string
    default: "nova:b26nc01node010"
    
  cloud_init_string:
    type: string
    default: |
        #cloud-config
        chpasswd:
          list: |
            ubuntu:mypasswd
            root:mypasswd
          expire: False
        ssh_pwauth: True
        users:
          - name: 'ubuntu'
            ssh-authorized-keys:
              - '

  ssh_pub_key:
    type: string

resources:
  cloud_init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:  {list_join: [' ', [ {get_param: cloud_init_string}, {get_param: ssh_pub_key}, "'"]]}
<% for server in kernel_nodes %>        
  vmi_instance_@@ loop.index @@:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_network_refs: [{list_join: [':', [ {get_param: fq_string}, {get_param: vn_name}]]}]
      port_security_enabled: true
      security_group_refs: [{list_join: [':', [ {get_param: fq_string}, {get_param: sec_group}]]}]

  vmi_management_instance_@@ loop.index @@:
    type: OS::ContrailV2::VirtualMachineInterface
    properties:
      virtual_network_refs: [{list_join: [':', [ {get_param: fq_string}, {get_param: management_vn_name}]]}]
      port_security_enabled: true
      security_group_refs: [{list_join: [':', [ {get_param: fq_string}, {get_param: sec_group}]]}]

  vmi_instance_ip_@@ loop.index @@:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ vmi_instance_@@ loop.index @@ ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: vmi_instance_@@ loop.index @@ }]
      virtual_network_refs: [{list_join: [':', [ {get_param: fq_string}, {get_param: vn_name}]]}]

  vmi_management_ip_@@ loop.index @@:
    type: OS::ContrailV2::InstanceIp
    depends_on: [ vmi_management_instance_@@ loop.index @@ ]
    properties:
      virtual_machine_interface_refs: [{ get_resource: vmi_management_instance_@@ loop.index @@ }]
      virtual_network_refs: [{list_join: [':', [ {get_param: fq_string}, {get_param: management_vn_name}]]}]

  instance_@@ loop.index @@:
    type: OS::Nova::Server
    depends_on: [vmi_instance_ip_@@ loop.index @@, vmi_management_ip_@@ loop.index @@]
    properties:
      name: {list_join: ['-', [{ get_param: instance_name }, '@@ loop.index @@']]}
      image: { get_param: image_name }
      flavor: { get_param: flavor_name }
      availability_zone: "nova:@@ server @@"
      user_data_format: RAW
      config_drive: true
      user_data: { get_resource: cloud_init }
      networks: 
       - port: { get_resource: vmi_instance_@@ loop.index @@ }
       - port: { get_resource: vmi_management_instance_@@ loop.index @@ }
<% endfor %>
